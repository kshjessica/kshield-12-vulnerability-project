from django.contrib.auth import login
from django.shortcuts import get_object_or_404, redirect, render
from django.urls import reverse

from .forms import CustomUserCreationForm
from .models import CodingQuestion


def question_list(request):
    questions = CodingQuestion.objects.all()
    return render(request, "solve/question_list.html", {"questions": questions})


def index(request):
    return render(request, "landing.html")


def signup(request):
    if request.method == "POST":
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect("index")
    else:
        form = CustomUserCreationForm()
    return render(request, "registration/signup.html", {"form": form})


def about(request):
    return render(request, "header/about.html")


def how_to_play(request):
    return render(request, "header/how_to_play.html")


def qna(request):
    return render(request, "header/qna.html")


from django.shortcuts import redirect, render
from django.urls import reverse


def sql_injection_practice(request):
    question = get_object_or_404(CodingQuestion, type="sql_injection_practice")
    injection_successful = False
    injection_unsuccessful = False
    if request.method == "POST":
        last_name = request.POST.get("last_name")

        query = f"SELECT * FROM user_data WHERE first_name = 'John' AND last_name = '{last_name}'"

        if "Smith' OR '1'='1" in query:
            injection_successful = True
        else:
            injection_unsuccessful = True

    return render(
        request,
        "solve/sql-injection-practice/question.html",
        {
            "injection_successful": injection_successful,
            "injection_unsuccessful": injection_unsuccessful,
            "hint": question.hint,
        },
    )


def show_explanation(request):
    return render(request, "solve/sql-injection-practice/explanation.html")
