[
  {
    "model": "solve.SecureCodingQuestion",
    "fields": {
      "title": "Input Value Validation",
      "type": "input-validation",
      "intro": "입력값 검증을 통해 보안 취약점을 방지하세요.",
      "content": "from collections import namedtuple\r\n\r\nOrder = namedtuple('Order', 'id, items')\r\nItem = namedtuple('Item', 'type, description, amount, quantity')\r\n\r\nMAX_ITEM_AMOUNT = 100000 # maximum price of item in the shop\r\nMAX_QUANTITY = 100 # maximum quantity of an item in the shop\r\nMIN_QUANTITY = 0 # minimum quantity of an item in the shop\r\nMAX_TOTAL = 1e6 # maximum total amount accepted for an order\r\n\r\ndef validorder(order: Order):\r\n    net = 0\r\n\r\n    for item in order.items:\r\n        if item.type == 'payment':\r\n            net += item.amount\r\n        elif item.type == 'product':\r\n            net -= item.amount * item.quantity\r\n        else:\r\n            return \"Invalid item type: %s\" % item.type\r\n\r\n    if net != 0:\r\n        return \"Order ID: %s - Payment imbalance: $%0.2f\" % (order.id, net)\r\n    else:\r\n        return \"Order ID: %s - Full payment received!\" % order.id",
      "hint": "var a = 10000000000000000; // 16 zeroes, 15 zeroes로 시도해보세요 ;)\r\nvar b = 2;\r\nvar c = 1;\r\n\r\nconsole.log(a + b - c - a);",
      "user_answer": "",
      "correct_answer": "if -MAX_ITEM_AMOUNT <= item.amount <= MAX_ITEM_AMOUNT:",
      "difficulty": "하",
      "status": "풀이하기",
      "tags": "python, 입력값 검증"
    }
  }
]
